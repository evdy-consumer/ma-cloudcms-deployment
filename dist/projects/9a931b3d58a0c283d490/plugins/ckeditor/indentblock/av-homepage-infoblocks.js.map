{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/plugin.js"],"names":["$listItem","CKEDITOR","dtd","$list","TRISTATE_DISABLED","TRISTATE_OFF","plugins","add","requires","init","editor","globalHelpers","indent","classes","config","indentClasses","registerCommands","indentblock","commandDefinition","outdentblock","specificDefinition","apply","arguments","allowedContent","propertiesOnly","styles","contentTransformations","enterBr","div","requiredContent","join","jobs","refresh","path","firstBlock","block","blockLimit","is","ascendant","getAscendant","contains","getParent","getContext","indentClassLeft","call","isIndent","getIndent","exec","selection","getSelection","range","getRanges","nearestListBlock","elementPath","indentElement","iterator","createIterator","enterMode","enforceRealBlocks","enlargeBr","ENTER_BR","getNextParagraph","ENTER_P","isReadOnly","tools","extend","prototype","context","dl","h1","h2","h3","h4","h5","h6","ul","ol","p","pre","table","classNameRegex","RegExp","element","dir","getCustomData","indentClass","$","className","match","indentStep","indexOf","Math","min","length","max","ltrim","replace","addClass","indentCssProperty","getIndentCss","currentOffset","parseInt","getStyle","indentOffset","isNaN","ceil","setStyle","indentUnit","getAttribute","removeAttribute","dom","setMarker","database","node","slice","getComputedStyle"],"mappings":"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","file":"av-homepage-infoblocks.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/plugin.js\");\n","/**\r\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @fileOverview Handles the indentation of block elements.\r\n */\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  var $listItem = CKEDITOR.dtd.$listItem,\r\n    $list = CKEDITOR.dtd.$list,\r\n    TRISTATE_DISABLED = CKEDITOR.TRISTATE_DISABLED,\r\n    TRISTATE_OFF = CKEDITOR.TRISTATE_OFF;\r\n\r\n  CKEDITOR.plugins.add('indentblock', {\r\n    requires: 'indent',\r\n    init: function (editor) {\r\n      var globalHelpers = CKEDITOR.plugins.indent,\r\n        classes = editor.config.indentClasses;\r\n\r\n      // Register commands.\r\n      globalHelpers.registerCommands(editor, {\r\n        indentblock: new commandDefinition(editor, 'indentblock', true),\r\n        outdentblock: new commandDefinition(editor, 'outdentblock')\r\n      });\r\n\r\n      function commandDefinition() {\r\n        globalHelpers.specificDefinition.apply(this, arguments);\r\n\r\n        this.allowedContent = {\r\n          'div h1 h2 h3 h4 h5 h6 ol p pre ul': {\r\n            // Do not add elements, but only text-align style if element is validated by other rule.\r\n            propertiesOnly: true,\r\n            styles: !classes ? 'margin-left,margin-right' : null,\r\n            classes: classes || null\r\n          }\r\n        };\r\n\r\n        this.contentTransformations = [\r\n          ['div: splitMarginShorthand'],\r\n          ['h1: splitMarginShorthand'],\r\n          ['h2: splitMarginShorthand'],\r\n          ['h3: splitMarginShorthand'],\r\n          ['h4: splitMarginShorthand'],\r\n          ['h5: splitMarginShorthand'],\r\n          ['h6: splitMarginShorthand'],\r\n          ['ol: splitMarginShorthand'],\r\n          ['p: splitMarginShorthand'],\r\n          ['pre: splitMarginShorthand'],\r\n          ['ul: splitMarginShorthand']\r\n        ];\r\n\r\n        if (this.enterBr)\r\n          this.allowedContent.div = true;\r\n\r\n        this.requiredContent = (this.enterBr ? 'div' : 'p') +\r\n          (classes ? '(' + classes.join(',') + ')' : '{margin-left}');\r\n\r\n        this.jobs = {\r\n          '20': {\r\n            refresh: function (editor, path) {\r\n              var firstBlock = path.block || path.blockLimit;\r\n\r\n              // Switch context from somewhere inside list item to list item,\r\n              // if not found just assign self (doing nothing).\r\n              if (!firstBlock.is($listItem)) {\r\n                var ascendant = firstBlock.getAscendant($listItem);\r\n\r\n                firstBlock = (ascendant && path.contains(ascendant)) || firstBlock;\r\n              }\r\n\r\n              // Switch context from list item to list\r\n              // because indentblock can indent entire list\r\n              // but not a single list element.\r\n\r\n              if (firstBlock.is($listItem))\r\n                firstBlock = firstBlock.getParent();\r\n\r\n              //\t[-] Context in the path or ENTER_BR\r\n              //\r\n              //\t\tDon't try to indent if the element is out of\r\n              //\t\tthis plugin's scope. This assertion is omitted\r\n              //\t\tif ENTER_BR is in use since there may be no block\r\n              //\t\tin the path.\r\n\r\n              if (!this.enterBr && !this.getContext(path))\r\n                return TRISTATE_DISABLED;\r\n\r\n              else if (classes) {\r\n\r\n                //\t[+] Context in the path or ENTER_BR\r\n                //\t[+] IndentClasses\r\n                //\r\n                //\t\tIf there are indentation classes, check if reached\r\n                //\t\tthe highest level of indentation. If so, disable\r\n                //\t\tthe command.\r\n\r\n                if (indentClassLeft.call(this, firstBlock, classes))\r\n                  return TRISTATE_OFF;\r\n                else\r\n                  return TRISTATE_DISABLED;\r\n              } else {\r\n\r\n                //\t[+] Context in the path or ENTER_BR\r\n                //\t[-] IndentClasses\r\n                //\t[+] Indenting\r\n                //\r\n                //\t\tNo indent-level limitations due to indent classes.\r\n                //\t\tIndent-like command can always be executed.\r\n\r\n                if (this.isIndent)\r\n                  return TRISTATE_OFF;\r\n\r\n                //\t[+] Context in the path or ENTER_BR\r\n                //\t[-] IndentClasses\r\n                //\t[-] Indenting\r\n                //\t[-] Block in the path\r\n                //\r\n                //\t\tNo block in path. There's no element to apply indentation\r\n                //\t\tso disable the command.\r\n\r\n                else if (!firstBlock)\r\n                  return TRISTATE_DISABLED;\r\n\r\n                //\t[+] Context in the path or ENTER_BR\r\n                //\t[-] IndentClasses\r\n                //\t[-] Indenting\r\n                //\t[+] Block in path.\r\n                //\r\n                //\t\tNot using indentClasses but there is firstBlock.\r\n                //\t\tWe can calculate current indentation level and\r\n                //\t\ttry to increase/decrease it.\r\n\r\n                else {\r\n                  return CKEDITOR[\r\n                    (getIndent(firstBlock) || 0) <= 0 ? 'TRISTATE_DISABLED' : 'TRISTATE_OFF'\r\n                  ];\r\n                }\r\n              }\r\n            },\r\n\r\n            exec: function (editor) {\r\n              var selection = editor.getSelection(),\r\n                range = selection && selection.getRanges()[0],\r\n                nearestListBlock;\r\n\r\n              // If there's some list in the path, then it will be\r\n              // a full-list indent by increasing or decreasing margin property.\r\n              if ((nearestListBlock = editor.elementPath().contains($list)))\r\n                indentElement.call(this, nearestListBlock, classes);\r\n\r\n              // If no list in the path, use iterator to indent all the possible\r\n              // paragraphs in the range, creating them if necessary.\r\n              else {\r\n                var iterator = range.createIterator(),\r\n                  enterMode = editor.config.enterMode,\r\n                  block;\r\n\r\n                iterator.enforceRealBlocks = true;\r\n                iterator.enlargeBr = enterMode != CKEDITOR.ENTER_BR;\r\n\r\n                while ((block = iterator.getNextParagraph(enterMode == CKEDITOR.ENTER_P ? 'p' : 'div'))) {\r\n                  if (!block.isReadOnly())\r\n                    indentElement.call(this, block, classes);\r\n                }\r\n              }\r\n\r\n              return true;\r\n            }\r\n          }\r\n        };\r\n      }\r\n\r\n      CKEDITOR.tools.extend(commandDefinition.prototype, globalHelpers.specificDefinition.prototype, {\r\n        // Elements that, if in an elementpath, will be handled by this\r\n        // command. They restrict the scope of the plugin.\r\n        context: { div: 1, dl: 1, h1: 1, h2: 1, h3: 1, h4: 1, h5: 1, h6: 1, ul: 1, ol: 1, p: 1, pre: 1, table: 1 },\r\n\r\n        // A regex built on config#indentClasses to detect whether an\r\n        // element has some indentClass or not.\r\n        classNameRegex: classes ? new RegExp('(?:^|\\\\s+)(' + classes.join('|') + ')(?=$|\\\\s)') : null\r\n      });\r\n    }\r\n  });\r\n\r\n  // Generic indentation procedure for indentation of any element\r\n  // either with margin property or config#indentClass.\r\n  function indentElement(element, classes, dir) {\r\n    if (element.getCustomData('indent_processed'))\r\n      return;\r\n\r\n    var editor = this.editor,\r\n      isIndent = this.isIndent;\r\n\r\n    if (classes) {\r\n      // Transform current class f to indent step index.\r\n      var indentClass = element.$.className.match(this.classNameRegex),\r\n        indentStep = 0;\r\n\r\n      if (indentClass) {\r\n        indentClass = indentClass[1];\r\n        indentStep = CKEDITOR.tools.indexOf(classes, indentClass) + 1;\r\n      }\r\n\r\n      // Operate on indent step index, transform indent step index\r\n      // back to class name.\r\n      if ((indentStep += isIndent ? 1 : -1) < 0)\r\n        return;\r\n\r\n      indentStep = Math.min(indentStep, classes.length);\r\n      indentStep = Math.max(indentStep, 0);\r\n      element.$.className = CKEDITOR.tools.ltrim(element.$.className.replace(this.classNameRegex, ''));\r\n\r\n      if (indentStep > 0)\r\n        element.addClass(classes[indentStep - 1]);\r\n    } else {\r\n      var indentCssProperty = getIndentCss(element, dir),\r\n        currentOffset = parseInt(element.getStyle(indentCssProperty), 10),\r\n        indentOffset = editor.config.indentOffset || 40;\r\n\r\n      if (isNaN(currentOffset))\r\n        currentOffset = 0;\r\n\r\n      currentOffset += (isIndent ? 1 : -1) * indentOffset;\r\n\r\n      if (currentOffset < 0)\r\n        return;\r\n\r\n      currentOffset = Math.max(currentOffset, 0);\r\n      currentOffset = Math.ceil(currentOffset / indentOffset) * indentOffset;\r\n\r\n      element.setStyle(\r\n        indentCssProperty,\r\n        currentOffset ? currentOffset + (editor.config.indentUnit || 'px') : ''\r\n      );\r\n\r\n      if (element.getAttribute('style') === '')\r\n        element.removeAttribute('style');\r\n    }\r\n\r\n    CKEDITOR.dom.element.setMarker(this.database, element, 'indent_processed', 1);\r\n\r\n    return;\r\n  }\r\n\r\n  // Method that checks if current indentation level for an element\r\n  // reached the limit determined by config#indentClasses.\r\n  function indentClassLeft(node, classes) {\r\n    var indentClass = node.$.className.match(this.classNameRegex),\r\n      isIndent = this.isIndent;\r\n\r\n    // If node has one of the indentClasses:\r\n    //\t* If it holds the topmost indentClass, then\r\n    //\t  no more classes have left.\r\n    //\t* If it holds any other indentClass, it can use the next one\r\n    //\t  or the previous one.\r\n    //\t* Outdent is always possible. We can remove indentClass.\r\n    if (indentClass)\r\n      return isIndent ? indentClass[1] != classes.slice(-1) : true;\r\n\r\n    // If node has no class which belongs to indentClasses,\r\n    // then it is at 0-level. It can be indented but not outdented.\r\n    else\r\n      return isIndent;\r\n  }\r\n\r\n  // Determines indent CSS property for an element according to\r\n  // what is the direction of such element. It can be either `margin-left`\r\n  // or `margin-right`.\r\n  function getIndentCss(element, dir) {\r\n    return (dir || element.getComputedStyle('direction')) == 'ltr' ? 'margin-left' : 'margin-right';\r\n  }\r\n\r\n  // Return the numerical indent value of margin-left|right of an element,\r\n  // considering element's direction. If element has no margin specified,\r\n  // NaN is returned.\r\n  function getIndent(element) {\r\n    return parseInt(element.getStyle(getIndentCss(element)), 10);\r\n  }\r\n})();\r\n\r\n/**\r\n * A list of classes to use for indenting the contents. If set to `null`, no classes will be used\r\n * and instead the {@link #indentUnit} and {@link #indentOffset} properties will be used.\r\n *\r\n *\t\t// Use the 'Indent1', 'Indent2', 'Indent3' classes.\r\n *\t\tconfig.indentClasses = ['Indent1', 'Indent2', 'Indent3'];\r\n *\r\n * @cfg {Array} [indentClasses=null]\r\n * @member CKEDITOR.config\r\n */\r\n\r\n/**\r\n * The size in {@link CKEDITOR.config#indentUnit indentation units} of each indentation step.\r\n *\r\n *\t\tconfig.indentOffset = 4;\r\n *\r\n * @cfg {Number} [indentOffset=40]\r\n * @member CKEDITOR.config\r\n */\r\n\r\n/**\r\n * The unit used for {@link CKEDITOR.config#indentOffset indentation offset}.\r\n *\r\n *\t\tconfig.indentUnit = 'em';\r\n *\r\n * @cfg {String} [indentUnit='px']\r\n * @member CKEDITOR.config\r\n */"],"sourceRoot":""}