{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/plugin.js"],"names":["$listItem","CKEDITOR","dtd","$list","TRISTATE_DISABLED","TRISTATE_OFF","plugins","add","requires","init","editor","globalHelpers","indent","classes","config","indentClasses","registerCommands","indentblock","commandDefinition","outdentblock","specificDefinition","apply","arguments","allowedContent","propertiesOnly","styles","contentTransformations","enterBr","div","requiredContent","join","jobs","refresh","path","firstBlock","block","blockLimit","is","ascendant","getAscendant","contains","getParent","getContext","indentClassLeft","call","isIndent","getIndent","exec","selection","getSelection","range","getRanges","nearestListBlock","elementPath","indentElement","iterator","createIterator","enterMode","enforceRealBlocks","enlargeBr","ENTER_BR","getNextParagraph","ENTER_P","isReadOnly","tools","extend","prototype","context","dl","h1","h2","h3","h4","h5","h6","ul","ol","p","pre","table","classNameRegex","RegExp","element","dir","getCustomData","indentClass","$","className","match","indentStep","indexOf","Math","min","length","max","ltrim","replace","addClass","indentCssProperty","getIndentCss","currentOffset","parseInt","getStyle","indentOffset","isNaN","ceil","setStyle","indentUnit","getAttribute","removeAttribute","dom","setMarker","database","node","slice","getComputedStyle"],"mappings":"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","file":"av-no-index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/plugin.js\");\n","/**\r\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @fileOverview Handles the indentation of block elements.\r\n */\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  var $listItem = CKEDITOR.dtd.$listItem,\r\n    $list = CKEDITOR.dtd.$list,\r\n    TRISTATE_DISABLED = CKEDITOR.TRISTATE_DISABLED,\r\n    TRISTATE_OFF = CKEDITOR.TRISTATE_OFF;\r\n\r\n  CKEDITOR.plugins.add('indentblock', {\r\n    requires: 'indent',\r\n    init: function (editor) {\r\n      var globalHelpers = CKEDITOR.plugins.indent,\r\n        classes = editor.config.indentClasses;\r\n\r\n      // Register commands.\r\n      globalHelpers.registerCommands(editor, {\r\n        indentblock: new commandDefinition(editor, 'indentblock', true),\r\n        outdentblock: new commandDefinition(editor, 'outdentblock')\r\n      });\r\n\r\n      function commandDefinition() {\r\n        globalHelpers.specificDefinition.apply(this, arguments);\r\n\r\n        this.allowedContent = {\r\n          'div h1 h2 h3 h4 h5 h6 ol p pre ul': {\r\n            // Do not add elements, but only text-align style if element is validated by other rule.\r\n            propertiesOnly: true,\r\n            styles: !classes ? 'margin-left,margin-right' : null,\r\n            classes: classes || null\r\n          }\r\n        };\r\n\r\n        this.contentTransformations = [\r\n          ['div: splitMarginShorthand'],\r\n          ['h1: splitMarginShorthand'],\r\n          ['h2: splitMarginShorthand'],\r\n          ['h3: splitMarginShorthand'],\r\n          ['h4: splitMarginShorthand'],\r\n          ['h5: splitMarginShorthand'],\r\n          ['h6: splitMarginShorthand'],\r\n          ['ol: splitMarginShorthand'],\r\n          ['p: splitMarginShorthand'],\r\n          ['pre: splitMarginShorthand'],\r\n          ['ul: splitMarginShorthand']\r\n        ];\r\n\r\n        if (this.enterBr)\r\n          this.allowedContent.div = true;\r\n\r\n        this.requiredContent = (this.enterBr ? 'div' : 'p') +\r\n          (classes ? '(' + classes.join(',') + ')' : '{margin-left}');\r\n\r\n        this.jobs = {\r\n          '20': {\r\n            refresh: function (editor, path) {\r\n              var firstBlock = path.block || path.blockLimit;\r\n\r\n              // Switch context from somewhere inside list item to list item,\r\n              // if not found just assign self (doing nothing).\r\n              if (!firstBlock.is($listItem)) {\r\n                var ascendant = firstBlock.getAscendant($listItem);\r\n\r\n                firstBlock = (ascendant && path.contains(ascendant)) || firstBlock;\r\n              }\r\n\r\n              // Switch context from list item to list\r\n              // because indentblock can indent entire list\r\n              // but not a single list element.\r\n\r\n              if (firstBlock.is($listItem))\r\n                firstBlock = firstBlock.getParent();\r\n\r\n              //\t[-] Context in the path or ENTER_BR\r\n              //\r\n              //\t\tDon't try to indent if the element is out of\r\n              //\t\tthis plugin's scope. This assertion is omitted\r\n              //\t\tif ENTER_BR is in use since there may be no block\r\n              //\t\tin the path.\r\n\r\n              if (!this.enterBr && !this.getContext(path))\r\n                return TRISTATE_DISABLED;\r\n\r\n              else if (classes) {\r\n\r\n                //\t[+] Context in the path or ENTER_BR\r\n                //\t[+] IndentClasses\r\n                //\r\n                //\t\tIf there are indentation classes, check if reached\r\n                //\t\tthe highest level of indentation. If so, disable\r\n                //\t\tthe command.\r\n\r\n                if (indentClassLeft.call(this, firstBlock, classes))\r\n                  return TRISTATE_OFF;\r\n                else\r\n                  return TRISTATE_DISABLED;\r\n              } else {\r\n\r\n                //\t[+] Context in the path or ENTER_BR\r\n                //\t[-] IndentClasses\r\n                //\t[+] Indenting\r\n                //\r\n                //\t\tNo indent-level limitations due to indent classes.\r\n                //\t\tIndent-like command can always be executed.\r\n\r\n                if (this.isIndent)\r\n                  return TRISTATE_OFF;\r\n\r\n                //\t[+] Context in the path or ENTER_BR\r\n                //\t[-] IndentClasses\r\n                //\t[-] Indenting\r\n                //\t[-] Block in the path\r\n                //\r\n                //\t\tNo block in path. There's no element to apply indentation\r\n                //\t\tso disable the command.\r\n\r\n                else if (!firstBlock)\r\n                  return TRISTATE_DISABLED;\r\n\r\n                //\t[+] Context in the path or ENTER_BR\r\n                //\t[-] IndentClasses\r\n                //\t[-] Indenting\r\n                //\t[+] Block in path.\r\n                //\r\n                //\t\tNot using indentClasses but there is firstBlock.\r\n                //\t\tWe can calculate current indentation level and\r\n                //\t\ttry to increase/decrease it.\r\n\r\n                else {\r\n                  return CKEDITOR[\r\n                    (getIndent(firstBlock) || 0) <= 0 ? 'TRISTATE_DISABLED' : 'TRISTATE_OFF'\r\n                  ];\r\n                }\r\n              }\r\n            },\r\n\r\n            exec: function (editor) {\r\n              var selection = editor.getSelection(),\r\n                range = selection && selection.getRanges()[0],\r\n                nearestListBlock;\r\n\r\n              // If there's some list in the path, then it will be\r\n              // a full-list indent by increasing or decreasing margin property.\r\n              if ((nearestListBlock = editor.elementPath().contains($list)))\r\n                indentElement.call(this, nearestListBlock, classes);\r\n\r\n              // If no list in the path, use iterator to indent all the possible\r\n              // paragraphs in the range, creating them if necessary.\r\n              else {\r\n                var iterator = range.createIterator(),\r\n                  enterMode = editor.config.enterMode,\r\n                  block;\r\n\r\n                iterator.enforceRealBlocks = true;\r\n                iterator.enlargeBr = enterMode != CKEDITOR.ENTER_BR;\r\n\r\n                while ((block = iterator.getNextParagraph(enterMode == CKEDITOR.ENTER_P ? 'p' : 'div'))) {\r\n                  if (!block.isReadOnly())\r\n                    indentElement.call(this, block, classes);\r\n                }\r\n              }\r\n\r\n              return true;\r\n            }\r\n          }\r\n        };\r\n      }\r\n\r\n      CKEDITOR.tools.extend(commandDefinition.prototype, globalHelpers.specificDefinition.prototype, {\r\n        // Elements that, if in an elementpath, will be handled by this\r\n        // command. They restrict the scope of the plugin.\r\n        context: { div: 1, dl: 1, h1: 1, h2: 1, h3: 1, h4: 1, h5: 1, h6: 1, ul: 1, ol: 1, p: 1, pre: 1, table: 1 },\r\n\r\n        // A regex built on config#indentClasses to detect whether an\r\n        // element has some indentClass or not.\r\n        classNameRegex: classes ? new RegExp('(?:^|\\\\s+)(' + classes.join('|') + ')(?=$|\\\\s)') : null\r\n      });\r\n    }\r\n  });\r\n\r\n  // Generic indentation procedure for indentation of any element\r\n  // either with margin property or config#indentClass.\r\n  function indentElement(element, classes, dir) {\r\n    if (element.getCustomData('indent_processed'))\r\n      return;\r\n\r\n    var editor = this.editor,\r\n      isIndent = this.isIndent;\r\n\r\n    if (classes) {\r\n      // Transform current class f to indent step index.\r\n      var indentClass = element.$.className.match(this.classNameRegex),\r\n        indentStep = 0;\r\n\r\n      if (indentClass) {\r\n        indentClass = indentClass[1];\r\n        indentStep = CKEDITOR.tools.indexOf(classes, indentClass) + 1;\r\n      }\r\n\r\n      // Operate on indent step index, transform indent step index\r\n      // back to class name.\r\n      if ((indentStep += isIndent ? 1 : -1) < 0)\r\n        return;\r\n\r\n      indentStep = Math.min(indentStep, classes.length);\r\n      indentStep = Math.max(indentStep, 0);\r\n      element.$.className = CKEDITOR.tools.ltrim(element.$.className.replace(this.classNameRegex, ''));\r\n\r\n      if (indentStep > 0)\r\n        element.addClass(classes[indentStep - 1]);\r\n    } else {\r\n      var indentCssProperty = getIndentCss(element, dir),\r\n        currentOffset = parseInt(element.getStyle(indentCssProperty), 10),\r\n        indentOffset = editor.config.indentOffset || 40;\r\n\r\n      if (isNaN(currentOffset))\r\n        currentOffset = 0;\r\n\r\n      currentOffset += (isIndent ? 1 : -1) * indentOffset;\r\n\r\n      if (currentOffset < 0)\r\n        return;\r\n\r\n      currentOffset = Math.max(currentOffset, 0);\r\n      currentOffset = Math.ceil(currentOffset / indentOffset) * indentOffset;\r\n\r\n      element.setStyle(\r\n        indentCssProperty,\r\n        currentOffset ? currentOffset + (editor.config.indentUnit || 'px') : ''\r\n      );\r\n\r\n      if (element.getAttribute('style') === '')\r\n        element.removeAttribute('style');\r\n    }\r\n\r\n    CKEDITOR.dom.element.setMarker(this.database, element, 'indent_processed', 1);\r\n\r\n    return;\r\n  }\r\n\r\n  // Method that checks if current indentation level for an element\r\n  // reached the limit determined by config#indentClasses.\r\n  function indentClassLeft(node, classes) {\r\n    var indentClass = node.$.className.match(this.classNameRegex),\r\n      isIndent = this.isIndent;\r\n\r\n    // If node has one of the indentClasses:\r\n    //\t* If it holds the topmost indentClass, then\r\n    //\t  no more classes have left.\r\n    //\t* If it holds any other indentClass, it can use the next one\r\n    //\t  or the previous one.\r\n    //\t* Outdent is always possible. We can remove indentClass.\r\n    if (indentClass)\r\n      return isIndent ? indentClass[1] != classes.slice(-1) : true;\r\n\r\n    // If node has no class which belongs to indentClasses,\r\n    // then it is at 0-level. It can be indented but not outdented.\r\n    else\r\n      return isIndent;\r\n  }\r\n\r\n  // Determines indent CSS property for an element according to\r\n  // what is the direction of such element. It can be either `margin-left`\r\n  // or `margin-right`.\r\n  function getIndentCss(element, dir) {\r\n    return (dir || element.getComputedStyle('direction')) == 'ltr' ? 'margin-left' : 'margin-right';\r\n  }\r\n\r\n  // Return the numerical indent value of margin-left|right of an element,\r\n  // considering element's direction. If element has no margin specified,\r\n  // NaN is returned.\r\n  function getIndent(element) {\r\n    return parseInt(element.getStyle(getIndentCss(element)), 10);\r\n  }\r\n})();\r\n\r\n/**\r\n * A list of classes to use for indenting the contents. If set to `null`, no classes will be used\r\n * and instead the {@link #indentUnit} and {@link #indentOffset} properties will be used.\r\n *\r\n *\t\t// Use the 'Indent1', 'Indent2', 'Indent3' classes.\r\n *\t\tconfig.indentClasses = ['Indent1', 'Indent2', 'Indent3'];\r\n *\r\n * @cfg {Array} [indentClasses=null]\r\n * @member CKEDITOR.config\r\n */\r\n\r\n/**\r\n * The size in {@link CKEDITOR.config#indentUnit indentation units} of each indentation step.\r\n *\r\n *\t\tconfig.indentOffset = 4;\r\n *\r\n * @cfg {Number} [indentOffset=40]\r\n * @member CKEDITOR.config\r\n */\r\n\r\n/**\r\n * The unit used for {@link CKEDITOR.config#indentOffset indentation offset}.\r\n *\r\n *\t\tconfig.indentUnit = 'em';\r\n *\r\n * @cfg {String} [indentUnit='px']\r\n * @member CKEDITOR.config\r\n */"],"sourceRoot":""}