{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./src/plugin.js"],"names":["pluginName","_window","window","CKEDITOR","plugins","add","requires","init","editor","colorMap","tools","get_plugin_config","utils","clone","el","copy","dom","element","getName","Object","entries","getAttributes","forEach","_ref","_ref2","_slicedToArray","k","v","setAttribute","wrapInside","node","chain","reduceRight","inner","outer","wrapper","append","splitText","range","s","equals","startContainer","startOffset","e","endContainer","endOffset","getLength","substring","liftColorSpans","walkRange","enlarge","ENLARGE_INLINE","walker","evaluator","n","type","NODE_ELEMENT","getStyle","span","next","inlineParent","getParent","firstChild","getFirst","inlineClone","remove","smartRemoveColorFromPartial","fullRange","spanWalker","spanNode","containsNode","removeStyle","hasAttributes","insertBeforeMe","collector","NODE_TEXT","getAscendant","targets","tn","push","_loop","textNode","_targets","_i","colorSpan","contains","fullText","getText","length","before","slice","selected","after","beforeFrag","text","selectedFrag","afterFrag","parentChain","cur","unshift","build","frag","keepColor","wrapped","spanCopy","filter","Boolean","getChildCount","_ret","ui","addRichCombo","label","toolbar","panel","css","skin","getPath","concat","_toConsumableArray","config","contentsCss","multiSelect","_i2","_Object$entries","_Object$entries$_i","val","onRender","setValue","onClick","choice","focus","selection","getSelection","fire","_selection","getRanges","_selection2","applyStyle","style","styles","color"],"mappings":"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","file":"av-exclusion-logic.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/plugin.js\");\n","export const pluginName = 'ckeditor-color';\n","import { pluginName } from './constants';\n\nconst { CKEDITOR } = window;\n\n/*\n * CKEditor 4 colour‑apply / remove plugin\n * --------------------------------------\n * • Apply colour: wrap selection in <span style='color:…'>, then lift the span so\n *   it wraps any inline tags (<strong>, <em>, …).\n * • Remove colour: single‑pass removal that handles fully‑ or partially‑selected\n *   colour spans while preserving every other inline style.\n */\nCKEDITOR.plugins.add(pluginName, {\n  requires: 'richcombo',\n  init(editor) {\n    const colorMap = CKEDITOR.tools.get_plugin_config(pluginName, editor);\n\n    /* ------------------------------ utils ------------------------------ */\n    const utils = {\n      clone(el) {\n        const copy = new CKEDITOR.dom.element(el.getName());\n        Object.entries(el.getAttributes()).forEach(([k, v]) => copy.setAttribute(k, v));\n        return copy;\n      },\n      wrapInside(node, chain) {\n        return chain.reduceRight((inner, outer) => {\n          const wrapper = utils.clone(outer);\n          wrapper.append(inner);\n          return wrapper;\n        }, node);\n      },\n      splitText(node, range) {\n        const s = node.equals(range.startContainer) ? range.startOffset : 0;\n        const e = node.equals(range.endContainer)   ? range.endOffset   : node.getLength();\n        return [node.substring(0, s), node.substring(s, e), node.substring(e)];\n      }\n    };\n\n    /* -------------------- span‑lifter (apply) -------------------- */\n    function liftColorSpans(range) {\n      // clone first, then enlarge – avoids undefined walker range / collapsed error\n      const walkRange = range.clone();\n      walkRange.enlarge(CKEDITOR.ENLARGE_INLINE);\n      const walker = new CKEDITOR.dom.walker(walkRange);\n      walker.evaluator = n => n?.type === CKEDITOR.NODE_ELEMENT && n.getName() === 'span' && n.getStyle('color');\n\n      let span;\n      while ((span = walker.next())) {\n        const inlineParent = span.getParent();\n        if (!inlineParent || inlineParent.getName() === 'span') continue; // span already outer‑most\n\n        const firstChild = span.getFirst();\n        if (firstChild?.type === CKEDITOR.NODE_ELEMENT && firstChild.getName() === inlineParent.getName()) continue; // clone already present\n\n        const inlineClone = utils.clone(inlineParent);\n        while (span.getFirst()) inlineClone.append(span.getFirst().remove());\n        span.append(inlineClone); // <span><strong>…</strong></span>\n      }\n    }\n\n    /* -------------------- colour remover ------------------------ */\n    function smartRemoveColorFromPartial(range) {\n      /* quick full-span removal */\n      const fullRange = range.clone();\n      fullRange.enlarge(CKEDITOR.ENLARGE_INLINE);\n      const spanWalker = new CKEDITOR.dom.walker(fullRange);\n      spanWalker.evaluator = node => node?.type === CKEDITOR.NODE_ELEMENT && node.getName() === 'span' && node.getStyle('color');\n      let spanNode;\n      while ((spanNode = spanWalker.next())) {\n        if (!spanNode) continue;\n        // strip colour only if the span is completely inside the (enlarged) range\n        if (fullRange.containsNode(spanNode, true)) {\n          spanNode.removeStyle('color');\n          if (!spanNode.hasAttributes()) {\n            while (spanNode.getFirst()) spanNode.insertBeforeMe(spanNode.getFirst().remove());\n            spanNode.remove();\n          }\n        }\n      }\n\n      /* original partial‑span logic */\n      // 1️⃣ Collect all text nodes inside coloured spans BEFORE mutating DOM\n      const collector = new CKEDITOR.dom.walker(range);\n      collector.evaluator = node =>\n        node.type === CKEDITOR.NODE_TEXT &&\n        node.getAscendant(el => el.getName && el.getName() === 'span' && el.getStyle('color'), true);\n\n      const targets = [];\n      for (let tn; (tn = collector.next()); ) targets.push(tn);\n\n      // 2️⃣ Process each text node (original splitting logic)\n      for (const textNode of targets) {\n        const colorSpan = textNode.getAscendant(el => el.getName && el.getName() === 'span' && el.getStyle('color'), true);\n        if (!colorSpan) continue;\n\n        /* If the selection fully covers this colour span, simply strip the\n           colour style once and skip further processing for its children. */\n        if (colorSpan.contains(range.startContainer) && colorSpan.contains(range.endContainer)) {\n          colorSpan.removeStyle('color');\n          if (!colorSpan.hasAttributes()) {\n            while (colorSpan.getFirst()) colorSpan.insertBeforeMe(colorSpan.getFirst().remove());\n            colorSpan.remove();\n          }\n          continue; // nothing more to do for any text nodes inside this span\n        }\n\n        const fullText     = textNode.getText();\n        const startOffset  = textNode.equals(range.startContainer) ? range.startOffset : 0;\n        const endOffset    = textNode.equals(range.endContainer)   ? range.endOffset   : fullText.length;\n\n        const before   = fullText.slice(0, startOffset);\n        const selected = fullText.slice(startOffset, endOffset);\n        const after    = fullText.slice(endOffset);\n\n        const beforeFrag   = before   ? new CKEDITOR.dom.text(before)   : null;\n        const selectedFrag = selected ? new CKEDITOR.dom.text(selected) : null;\n        const afterFrag    = after    ? new CKEDITOR.dom.text(after)    : null;\n\n        const parentChain = [];\n        let cur = textNode.getParent();\n        while (cur && !cur.equals(colorSpan)) { parentChain.unshift(cur); cur = cur.getParent(); }\n\n        const build = (frag, keepColor) => {\n          if (!frag) return null;\n          const wrapped = utils.wrapInside(frag, parentChain);\n          if (!keepColor) return wrapped;\n          const spanCopy = utils.clone(colorSpan);\n          spanCopy.append(wrapped);\n          return spanCopy;\n        };\n\n        [build(beforeFrag, true), utils.wrapInside(selectedFrag || new CKEDITOR.dom.text(''), parentChain), build(afterFrag, true)]\n          .filter(Boolean)\n          .forEach(frag => colorSpan.insertBeforeMe(frag));\n\n        textNode.remove();\n        if (!colorSpan.getChildCount()) colorSpan.remove();\n      }\n    }\n\n    /* ---------------------- UI combo */\n\n      \n    /* ---------------------- UI combo ----------------------------- */\n    editor.ui.addRichCombo('ApplyColor', {\n      label: 'Apply Color',\n      toolbar: 'styles',\n      panel: {\n        css: [CKEDITOR.skin.getPath('editor'), ...editor.config.contentsCss],\n        multiSelect: false\n      },\n      init() {\n        this.add('default', 'Remove Color', 'Remove Color');\n        for (const [label, val] of Object.entries(colorMap)) this.add(val, label, label);\n      },\n      onRender() { this.setValue(''); },\n      onClick(choice) {\n        editor.focus();\n        let selection = editor.getSelection();\n        if (!selection) return;\n        editor.fire('lockSnapshot');\n\n        if (choice === 'default') {\n          // 1️⃣ ensure structure is normalised, then 2️⃣ remove colour\n          selection.getRanges().forEach(liftColorSpans);\n          selection = editor.getSelection();\n          selection?.getRanges().forEach(smartRemoveColorFromPartial);\n        } else {\n          editor.applyStyle(new CKEDITOR.style({ element: 'span', styles: { color: choice } }));\n          selection = editor.getSelection();\n          selection?.getRanges().forEach(liftColorSpans);\n        }\n\n        editor.fire('unlockSnapshot');\n      }\n    });\n  }\n});\n"],"sourceRoot":""}