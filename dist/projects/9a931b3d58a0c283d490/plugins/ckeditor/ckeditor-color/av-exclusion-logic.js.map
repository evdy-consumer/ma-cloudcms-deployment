{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./src/plugin.js"],"names":["pluginName","CKEDITOR","window","plugins","add","requires","init","editor","pluginConfig","tools","get_plugin_config","colors","ui","addRichCombo","label","toolbar","panel","css","skin","getPath","concat","config","contentsCss","multiSelect","console","log","colorValue","onRender","setValue","onClick","value","focus","selection","getSelection","warn","bookmarks","createBookmarks","ranges","getRanges","length","every","r","collapsed","fire","forEach","range","index","enlarge","ENLARGE_INLINE","walker","dom","evaluator","node","type","NODE_ELEMENT","getName","getStyle","spanCount","cleanedCount","unwrappedCount","foundAny","next","nodeRange","createRange","selectNodeContents","startSpan","startContainer","getAscendant","endSpan","endContainer","needsSplit","equals","startRange","setStart","startOffset","setEndAfter","split","endRange","endOffset","current","getNext","getPrevious","removeStyle","hasAttributes","children","getChildren","toArray","_iterator","_createForOfIteratorHelper","_step","s","n","done","child","insertBeforeMe","remove","err","e","f","getAttribute","_iterator2","_step2","colorSpan","startTextNode","getFirst","NODE_TEXT","endTextNode","textNode","fullText","getText","textBefore","substring","textSelected","textAfter","parent","getParent","afterNode","text","document","insertAfter","selectedNode","selectedSpan","element","append","replace","beforeNode","insertBefore","getChildCount","selectBookmarks","style","styles","color","applyStyle"],"mappings":"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","file":"av-exclusion-logic.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/plugin.js\");\n","export const pluginName = 'ckeditor-color';\n","import {\n  pluginName\n} from './constants';\n\nconst CKEDITOR = window.CKEDITOR;\n\n\nCKEDITOR.plugins.add(pluginName, {\n  requires: 'richcombo',\n  init: function (editor) {\n    const pluginConfig = CKEDITOR.tools.get_plugin_config(pluginName, editor);\n    const colors = pluginConfig;\n\n    editor.ui.addRichCombo('ApplyColor', {\n      label: 'Apply Color',\n      toolbar: 'styles',\n      panel: {\n        css: [CKEDITOR.skin.getPath('editor')].concat(editor.config.contentsCss),\n        multiSelect: false\n      },\n      init: function () {\n        this.add('default', 'Remove Color', 'Remove Color'); // Remove color default option\n        console.log('colors', colors);\n        for (let label in colors) {\n          const colorValue = colors[label];\n          this.add(colorValue, label, label);\n        }\n      },\n      onRender: function () {\n        this.setValue(''); // Prevents any item from being auto-selected\n      },\n      onClick: function (value) {\n        editor.focus();\n/*         if (value === 'default') {\n          const selection = editor.getSelection();\n          const ranges = selection.getRanges();\n\n          editor.fire('lockSnapshot');\n\n          console.log('🟡 Starting color removal...');\n\n          // Force span splitting by applying and removing a dummy style\n          const dummyStyle = new CKEDITOR.style({ element: 'span', styles: { 'background-color': '#ffffff' } });\n          editor.applyStyle(dummyStyle);\n          editor.removeStyle(dummyStyle);\n\n          const bookmarks = selection.createBookmarks();\n          ranges.forEach((range, i) => {\n            console.log(`🟢 Range ${i + 1}:`, range);\n\n            let found = 0;\n            let unwrapped = 0;\n\n            const tryProcessSpan = (span) => {\n              if (\n                span &&\n                span.type === CKEDITOR.NODE_ELEMENT &&\n                span.getName() === 'span' &&\n                span.getStyle('color')\n              ) {\n                found++;\n                console.log('🎯 Found span with color:', span.getOuterHtml());\n                span.removeStyle('color');\n\n                if (!span.hasAttributes()) {\n                  const children = span.getChildren().toArray();\n                  for (let child of children) {\n                    span.insertBeforeMe(child.remove());\n                  }\n                  span.remove();\n                  unwrapped++;\n                  console.log('🧹 Unwrapped span.');\n                }\n              }\n            };\n\n            // 1. Try enclosed node\n            const enclosed = range.getEnclosedNode();\n            tryProcessSpan(enclosed);\n\n            // 2. Fallback: walker inside the range\n            const walker = new CKEDITOR.dom.walker(range);\n            walker.evaluator = function (node) {\n              return node.type === CKEDITOR.NODE_ELEMENT &&\n                    node.getName() === 'span' &&\n                    node.getStyle('color');\n            };\n\n            let node;\n            while ((node = walker.next())) {\n              tryProcessSpan(node);\n            }\n\n            // 3. NEW: Also check if startContainer or endContainer is a colored span\n            tryProcessSpan(range.startContainer);\n            tryProcessSpan(range.endContainer);\n\n            console.log(`✅ Range ${i + 1} done: found ${found}, unwrapped ${unwrapped}`);\n          });\n\n          editor.fire('unlockSnapshot');\n\n          console.log('🎉 Finished removing color from selection.');\n        } */\n        if (value === 'default') {\n          const selection = editor.getSelection();\n          if (!selection) {\n            console.warn('⚠️ No selection found.');\n            return;\n          }\n\n          const bookmarks = selection.createBookmarks();\n          const ranges = selection.getRanges();\n\n          if (!ranges.length || ranges.every(r => r.collapsed)) {\n            console.warn('⚠️ No text selected.');\n            return;\n          }\n\n          editor.fire('lockSnapshot');\n          console.log('🟡 Starting precise color removal…');\n\n          ranges.forEach((range, index) => {\n            if (range.collapsed) {\n              console.log(`⏭ Skipping collapsed range ${index + 1}`);\n              return;\n            }\n\n            console.log(`🟢 Processing range ${index + 1}`);\n            range.enlarge(CKEDITOR.ENLARGE_INLINE);\n\n            const walker = new CKEDITOR.dom.walker(range);\n            walker.evaluator = function (node) {\n              return (\n                node.type === CKEDITOR.NODE_ELEMENT &&\n                node.getName() === 'span' &&\n                node.getStyle('color')\n              );\n            };\n\n            let node;\n            let spanCount = 0, cleanedCount = 0, unwrappedCount = 0;\n            let foundAny = false;\n\n            while ((node = walker.next())) {\n              if (!node || !node.getStyle('color')) continue;\n              foundAny = true;\n              spanCount++;\n\n              const nodeRange = editor.createRange();\n              nodeRange.selectNodeContents(node);\n\n              const startSpan = range.startContainer.getAscendant('span', true);\n              const endSpan = range.endContainer.getAscendant('span', true);\n\n              const needsSplit =\n                startSpan &&\n                endSpan &&\n                startSpan.equals(node) &&\n                endSpan.equals(node) &&\n                !range.equals(nodeRange);\n\n              if (needsSplit) {\n                console.log('✂️ Splitting span partially covered by selection.');\n\n                const startRange = editor.createRange();\n                startRange.setStart(range.startContainer, range.startOffset);\n                startRange.setEndAfter(node);\n\n                if (typeof startRange.split === 'function') {\n                  startRange.split();\n                } else {\n                  console.warn('startRange.split is not a function');\n                }\n\n                const endRange = editor.createRange();\n                endRange.setStart(range.endContainer, range.endOffset);\n                endRange.setEndAfter(node);\n\n                if (typeof endRange.split === 'function') {\n                  endRange.split();\n                } else {\n                  console.warn('endRange.split is not a function');\n                }\n\n                let current = node.getNext();\n                while (current) {\n                  if (\n                    current.type === CKEDITOR.NODE_ELEMENT &&\n                    current.getName() === 'span' &&\n                    current.getStyle('color') &&\n                    current.getPrevious() &&\n                    current.getPrevious().equals(node)\n                  ) {\n                    current.removeStyle('color');\n\n                    if (!current.hasAttributes()) {\n                      const children = current.getChildren().toArray();\n                      for (let child of children) {\n                        current.insertBeforeMe(child.remove());\n                      }\n                      current.remove();\n                      unwrappedCount++;\n                      console.log('🧹 Unwrapped empty span after color removal.');\n                    } else {\n                      console.log('🎯 Removed color, kept other styles:', current.getAttribute('style'));\n                    }\n                    cleanedCount++;\n                    break;\n                  }\n                  current = current.getNext();\n                }\n              } else {\n                node.removeStyle('color');\n                cleanedCount++;\n\n                if (!node.hasAttributes()) {\n                  const children = node.getChildren().toArray();\n                  for (let child of children) {\n                    node.insertBeforeMe(child.remove());\n                  }\n                  node.remove();\n                  unwrappedCount++;\n                  console.log('🧹 Unwrapped empty span after color removal.');\n                } else {\n                  console.log('🎯 Removed color, kept other styles:', node.getAttribute('style'));\n                }\n              }\n            }\n\n            // 🔁 Fallback: try to remove color from nearest span if none found by walker\n            if (!foundAny) {\n              const colorSpan = range.startContainer.getAscendant('span', true);\n\n              if (\n                colorSpan &&\n                colorSpan.type === CKEDITOR.NODE_ELEMENT &&\n                colorSpan.getStyle('color')\n              ) {\n                console.log('⚠️ No color spans found in walker, but selection is inside a colored span — fallback applying text-level extraction.');\n\n                const startContainer = range.startContainer;\n                const endContainer = range.endContainer;\n\n                // Try to go one level deeper if we're on a span\n                const startTextNode = startContainer.type === CKEDITOR.NODE_ELEMENT\n                  ? startContainer.getFirst(CKEDITOR.NODE_TEXT)\n                  : startContainer;\n\n                const endTextNode = endContainer.type === CKEDITOR.NODE_ELEMENT\n                  ? endContainer.getFirst(CKEDITOR.NODE_TEXT)\n                  : endContainer;\n\n                if (startTextNode && endTextNode && startTextNode.equals(endTextNode)) {\n                  const textNode = startTextNode;\n                  const fullText = textNode.getText();\n                  const startOffset = range.startOffset;\n                  const endOffset = range.endOffset;\n\n                  const textBefore = fullText.substring(0, startOffset);\n                  const textSelected = fullText.substring(startOffset, endOffset);\n                  const textAfter = fullText.substring(endOffset);\n\n                  const parent = textNode.getParent();\n\n                  if (textAfter) {\n                    const afterNode = new CKEDITOR.dom.text(textAfter, editor.document);\n                    parent.insertAfter(afterNode, textNode);\n                  }\n\n                  if (textSelected) {\n                    const selectedNode = new CKEDITOR.dom.text(textSelected, editor.document);\n                    const selectedSpan = new CKEDITOR.dom.element('span');\n                    selectedSpan.append(selectedNode);\n                    parent.insertAfter(selectedSpan, textNode);\n                    selectedSpan.removeStyle('color');\n\n                    if (!selectedSpan.hasAttributes()) {\n                      selectedSpan.replace(selectedSpan.getFirst());\n                      console.log('🧹 Fallback unwrapped selected span.');\n                    } else {\n                      console.log('🎯 Fallback: removed color, kept other styles:', selectedSpan.getAttribute('style'));\n                    }\n                  }\n\n                  if (textBefore) {\n                    const beforeNode = new CKEDITOR.dom.text(textBefore, editor.document);\n                    parent.insertBefore(beforeNode, textNode);\n                  }\n\n                  textNode.remove();\n\n                  // Clean up empty parent span if needed\n                  if (!colorSpan.hasAttributes() && colorSpan.getChildCount() === 0) {\n                    colorSpan.remove();\n                    console.log('🧹 Fallback removed empty parent span.');\n                  }\n                } else {\n                  console.warn('⚠️ Fallback not applied: selection spans different nodes or could not find matching text nodes.');\n                }\n              }\n            }\n\n            console.log(`✅ Finished range ${index + 1}: found=${spanCount}, cleaned=${cleanedCount}, unwrapped=${unwrappedCount}`);\n          });\n\n          selection.selectBookmarks(bookmarks);\n          editor.fire('unlockSnapshot');\n          console.log('🎉 Color removal complete.');\n          return;\n        }\n        else {\n          const style = new CKEDITOR.style({\n            element: 'span',\n            styles: { color: value }\n          });\n          editor.focus();\n          editor.applyStyle(style);\n        }\n      }\n    });\n  }\n});\n"],"sourceRoot":""}