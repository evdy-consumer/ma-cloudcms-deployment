{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./src/plugin.js"],"names":["pluginName","CKEDITOR","window","plugins","add","requires","init","editor","colors","tools","get_plugin_config","wrapInside","node","parentChain","reduceRight","inner","outer","wrapper","dom","element","getName","Object","entries","getAttributes","forEach","_ref","_ref2","_slicedToArray","k","v","setAttribute","append","liftColorSpans","range","r","clone","enlarge","ENLARGE_INLINE","walker","evaluator","n","type","NODE_ELEMENT","getStyle","span","_loop","_span$getFirst","parent","getParent","getFirst","_ref3","_ref4","remove","_ret","next","removeColor","w","_n$getAscendant","NODE_TEXT","getAscendant","text","_loop2","start","equals","startContainer","startOffset","end","endContainer","endOffset","getLength","before","substring","mid","after","chain","p","unshift","build","content","keepColor","inside","coloured","getAttribute","filter","Boolean","f","insertBeforeMe","getChildCount","ui","addRichCombo","label","toolbar","panel","css","skin","getPath","concat","config","contentsCss","multiSelect","_this","_ref5","_ref6","val","onRender","setValue","onClick","value","focus","sel","getSelection","ranges","getRanges","fire","style","styles","color","applyStyle"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAO,IAAMA,UAAU,GAAG,gBAAgB,C;;;;;;;;;;;;;;;;;;;;ACA1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"av-exclusion-logic.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/plugin.js\");\n","export const pluginName = 'ckeditor-color';\n","/* import { pluginName } from './constants';\n\nconst CKEDITOR = window.CKEDITOR;\n\nCKEDITOR.plugins.add(pluginName, {\n  requires: 'richcombo',\n  init: function (editor) {\n    const pluginConfig = CKEDITOR.tools.get_plugin_config(pluginName, editor);\n    const colors = pluginConfig;\n\n    function wrapWithAncestorsInside(node, parentChain) {\n      return parentChain.reduceRight((inner, outer) => {\n        const clone = new CKEDITOR.dom.element(outer.getName());\n        const attrs = outer.getAttributes();\n        for (let k in attrs) clone.setAttribute(k, attrs[k]);\n        clone.append(inner);\n        return clone;\n      }, node);\n    }\n\n    editor.ui.addRichCombo('ApplyColor', {\n      label: 'Apply Color',\n      toolbar: 'styles',\n      panel: {\n        css: [CKEDITOR.skin.getPath('editor')].concat(editor.config.contentsCss),\n        multiSelect: false\n      },\n      init: function () {\n        this.add('default', 'Remove Color', 'Remove Color');\n        for (let label in colors) {\n          const colorValue = colors[label];\n          this.add(colorValue, label, label);\n        }\n      },\n      onRender: function () {\n        this.setValue('');\n      },\n      onClick: function (value) {\n        editor.focus();\n\n        const selection = editor.getSelection();\n        if (!selection) return;\n\n        const ranges = selection.getRanges();\n        editor.fire('lockSnapshot');\n\n        if (value === 'default') {\n          console.log('🟡 Starting color removal');\n          ranges.forEach((range, index) => {\n            console.log(`📌 Processing range ${index + 1}`);\n            range.enlarge(CKEDITOR.ENLARGE_INLINE);\n            smartRemoveColorFromPartial(range);\n          });\n          console.log('✅ Color removal complete');\n        } else {\n          const style = new CKEDITOR.style({\n            element: 'span',\n            styles: { color: value }\n          });\n          editor.applyStyle(style);\n          console.log(`🎨 Applied color: ${value}`);\n        }\n\n        editor.fire('unlockSnapshot');\n      }\n    });\n\n    function smartRemoveColorFromPartial(range) {\n      const walker = new CKEDITOR.dom.walker(range);\n      walker.evaluator = function (node) {\n        return (\n          node.type === CKEDITOR.NODE_TEXT &&\n          node.getAscendant(function (el) {\n            return el.getName && el.getName() === 'span' && el.getStyle('color');\n          }, true)\n        );\n      };\n\n      let textNode;\n      while ((textNode = walker.next())) {\n        const colorSpan = textNode.getAscendant(function (el) {\n          return el.getName && el.getName() === 'span' && el.getStyle('color');\n        }, true);\n\n        if (!colorSpan) continue;\n\n        const fullText = textNode.getText();\n        const startOffset = textNode.equals(range.startContainer) ? range.startOffset : 0;\n        const endOffset = textNode.equals(range.endContainer) ? range.endOffset : fullText.length;\n\n        const before = fullText.slice(0, startOffset);\n        const selected = fullText.slice(startOffset, endOffset);\n        const after = fullText.slice(endOffset);\n\n        console.log(`🔍 Splitting text node: '${fullText}'`);\n        console.log(`    Before: '${before}' | Selected: '${selected}' | After: '${after}'`);\n\n        const beforeFrag = before ? new CKEDITOR.dom.text(before) : null;\n        const selectedFrag = selected ? new CKEDITOR.dom.text(selected) : null;\n        const afterFrag = after ? new CKEDITOR.dom.text(after) : null;\n\n        const parentChain = [];\n        let current = textNode.getParent();\n        while (current && !current.equals(colorSpan)) {\n          parentChain.unshift(current);\n          current = current.getParent();\n        }\n\n        if (beforeFrag) {\n          const span = new CKEDITOR.dom.element('span');\n          span.setAttribute('style', colorSpan.getAttribute('style'));\n          const wrapped = wrapWithAncestorsInside(beforeFrag, parentChain);\n          span.append(wrapped);\n          colorSpan.insertBeforeMe(span);\n          console.log('⬅️ Inserted left part with original color and formatting');\n        }\n\n        if (selectedFrag) {\n          const originalStyle = colorSpan.getAttribute('style') || '';\n          const keptStyle = originalStyle\n            .split(';')\n            .map(s => s.trim())\n            .filter(s => s && !s.startsWith('color'))\n            .join('; ');\n\n          let wrapped = wrapWithAncestorsInside(selectedFrag, parentChain);\n\n          if (keptStyle) {\n            const midSpan = new CKEDITOR.dom.element('span');\n            midSpan.setAttribute('style', keptStyle);\n            midSpan.append(wrapped);\n            wrapped = midSpan;\n          }\n\n          colorSpan.insertBeforeMe(wrapped);\n          console.log(`✨ Inserted middle with formatting (no color): '${keptStyle}'`);\n        }\n\n        if (afterFrag) {\n          const span = new CKEDITOR.dom.element('span');\n          span.setAttribute('style', colorSpan.getAttribute('style'));\n          const wrapped = wrapWithAncestorsInside(afterFrag, parentChain);\n          span.append(wrapped);\n          colorSpan.insertBeforeMe(span);\n          console.log('➡️ Inserted right part with original color and formatting');\n        }\n\n        textNode.remove();\n\n        if (colorSpan.getChildCount() === 0) {\n          colorSpan.remove();\n          console.log('🧹 Removed empty original span');\n        }\n      }\n    }\n  }\n}); */\n\nimport { pluginName } from './constants';\n\nconst CKEDITOR = window.CKEDITOR;\n\nCKEDITOR.plugins.add(pluginName, {\n  requires: 'richcombo',\n  init(editor) {\n    const colors = CKEDITOR.tools.get_plugin_config(pluginName, editor);\n\n    /*************************************************\n     * Helper –  clone the whole parentChain **inside** the\n     * colour <span> so     <strong>txt</strong>  becomes\n     * <span style='color'><strong>txt</strong></span>\n     *************************************************/\n    function wrapInside(node, parentChain) {\n      return parentChain.reduceRight((inner, outer) => {\n        const wrapper = new CKEDITOR.dom.element(outer.getName());\n        Object.entries(outer.getAttributes()).forEach(([k, v]) => wrapper.setAttribute(k, v));\n        wrapper.append(inner);\n        return wrapper;\n      }, node);\n    }\n\n    /*************************************************\n     * After applyStyle, CKEditor often inserts\n     * <strong><span style='color'>…</span></strong>\n     * This lifts such inner spans so they wrap the inline tag.\n     *************************************************/\n    /**\n     * CKEditor inserts   <strong>foo <span style='color'>bar</span></strong>\n     * We want            <strong>foo <span style='color'><strong>bar</strong></span></strong>\n     *\n     * For every colour <span> that sits inside a non‑span inline tag,\n     * clone that inline tag INSIDE the span (instead of pulling the span out).\n     */\n    function liftColorSpans(range) {\n      const r = range.clone();\n      r.enlarge(CKEDITOR.ENLARGE_INLINE);\n\n      const walker = new CKEDITOR.dom.walker(r);\n      walker.evaluator = n => n?.type === CKEDITOR.NODE_ELEMENT && n.getName() === 'span' && n.getStyle('color');\n\n      let span;\n      while ((span = walker.next())) {\n        const parent = span.getParent();\n        if (!parent || parent.getName() === 'span') continue; // span already outer‑most or at root\n        if (span.getFirst()?.getName && span.getFirst().getName() === parent.getName()) continue; // already cloned\n\n        // 1. Clone the inline parent (e.g. <strong>)\n        const clone = new CKEDITOR.dom.element(parent.getName());\n        Object.entries(parent.getAttributes()).forEach(([k, v]) => clone.setAttribute(k, v));\n\n        // 2. Move span's children into the clone\n        while (span.getFirst()) clone.append(span.getFirst().remove());\n\n        // 3. Append the clone back into the span\n        span.append(clone);\n      }\n    }\n\n    /*************************************************\n     * Remove only colour from selection, keep other inline styles\n     *************************************************/\n    function removeColor(range) {\n      const w = new CKEDITOR.dom.walker(range.clone());\n      w.evaluator = n => n.type === CKEDITOR.NODE_TEXT && n.getAscendant('span', true)?.getStyle('color');\n      let text;\n      while ((text = w.next())) {\n        const span = text.getAscendant('span', true);\n        if (!span) continue;\n\n        const start = text.equals(range.startContainer) ? range.startOffset : 0;\n        const end = text.equals(range.endContainer) ? range.endOffset : text.getLength();\n        const before = text.substring(0, start);\n        const mid = text.substring(start, end);\n        const after = text.substring(end);\n\n        const chain = [];\n        let p = text.getParent();\n        while (p && !p.equals(span)) { chain.unshift(p); p = p.getParent(); }\n\n        const build = (content, keepColor) => {\n          if (!content) return null;\n          const inside = wrapInside(new CKEDITOR.dom.text(content), chain);\n          if (!keepColor) return inside;\n          const coloured = new CKEDITOR.dom.element('span');\n          coloured.setAttribute('style', span.getAttribute('style'));\n          coloured.append(inside);\n          return coloured;\n        };\n\n        [build(before, true), wrapInside(new CKEDITOR.dom.text(mid), chain), build(after, true)]\n          .filter(Boolean)\n          .forEach(f => span.insertBeforeMe(f));\n\n        text.remove();\n        if (!span.getChildCount()) span.remove();\n      }\n    }\n\n    /******************* RichCombo UI ************************/\n    editor.ui.addRichCombo('ApplyColor', {\n      label: 'Apply Color',\n      toolbar: 'styles',\n      panel: {\n        css: [CKEDITOR.skin.getPath('editor')].concat(editor.config.contentsCss),\n        multiSelect: false\n      },\n      init() {\n        this.add('default', 'Remove Color', 'Remove Color');\n        Object.entries(colors).forEach(([label, val]) => this.add(val, label, label));\n      },\n      onRender() { this.setValue(''); },\n\n      onClick(value) {\n        editor.focus();\n        const sel = editor.getSelection();\n        if (!sel) return;\n        const ranges = sel.getRanges();\n        editor.fire('lockSnapshot');\n\n        if (value === 'default') {\n          ranges.forEach(removeColor);\n        } else {\n          const style = new CKEDITOR.style({ element: 'span', styles: { color: value } });\n          editor.applyStyle(style);\n          ranges.forEach(liftColorSpans);\n        }\n\n        editor.fire('unlockSnapshot');\n      }\n    });\n  }\n});\n"],"sourceRoot":""}