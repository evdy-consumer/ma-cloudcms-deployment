{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./src/plugin.js"],"names":["pluginName","CKEDITOR","window","getFirstTextNode","element","children","getChildren","i","count","child","getItem","type","NODE_TEXT","plugins","add","requires","init","editor","pluginConfig","tools","get_plugin_config","colors","ui","addRichCombo","label","toolbar","panel","css","skin","getPath","concat","config","contentsCss","multiSelect","console","log","colorValue","onRender","setValue","onClick","value","focus","selection","getSelection","warn","bookmarks","createBookmarks","ranges","getRanges","length","every","r","collapsed","fire","forEach","range","index","enlarge","ENLARGE_INLINE","walker","dom","evaluator","node","NODE_ELEMENT","getName","getStyle","spanCount","cleanedCount","unwrappedCount","foundAny","next","nodeRange","createRange","selectNodeContents","startSpan","startContainer","getAscendant","endSpan","endContainer","needsSplit","equals","startRange","setStart","startOffset","setEndAfter","split","endRange","endOffset","current","getNext","getPrevious","removeStyle","hasAttributes","toArray","_iterator","_createForOfIteratorHelper","_step","s","n","done","insertBeforeMe","remove","err","e","f","getAttribute","_iterator2","_step2","colorSpan","_startNode$getParent","_endNode$getParent","getTextNodeAndOffset","container","offset","currentOffset","getLength","_getTextNodeAndOffset","startNode","_getTextNodeAndOffset2","endNode","isValidStart","getParent","isValidEnd","originalText","getText","before","slice","middle","after","parent","beforeSpan","clone","setText","append","middleSpan","afterSpan","selectBookmarks","style","styles","color","applyStyle"],"mappings":"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","file":"av-exclusion-logic.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/plugin.js\");\n","export const pluginName = 'ckeditor-color';\n","import {\n  pluginName\n} from './constants';\n\nconst CKEDITOR = window.CKEDITOR;\n\nfunction getFirstTextNode(element) {\n  const children = element.getChildren();\n  for (let i = 0; i < children.count(); i++) {\n    const child = children.getItem(i);\n    if (child.type === CKEDITOR.NODE_TEXT) {\n      return child;\n    }\n  }\n  return null;\n}\n\nCKEDITOR.plugins.add(pluginName, {\n  requires: 'richcombo',\n  init: function (editor) {\n    const pluginConfig = CKEDITOR.tools.get_plugin_config(pluginName, editor);\n    const colors = pluginConfig;\n\n    editor.ui.addRichCombo('ApplyColor', {\n      label: 'Apply Color',\n      toolbar: 'styles',\n      panel: {\n        css: [CKEDITOR.skin.getPath('editor')].concat(editor.config.contentsCss),\n        multiSelect: false\n      },\n      init: function () {\n        this.add('default', 'Remove Color', 'Remove Color'); // Remove color default option\n        console.log('colors', colors);\n        for (let label in colors) {\n          const colorValue = colors[label];\n          this.add(colorValue, label, label);\n        }\n      },\n      onRender: function () {\n        this.setValue(''); // Prevents any item from being auto-selected\n      },\n      onClick: function (value) {\n        editor.focus();\n/*         if (value === 'default') {\n          const selection = editor.getSelection();\n          const ranges = selection.getRanges();\n\n          editor.fire('lockSnapshot');\n\n          console.log('🟡 Starting color removal...');\n\n          // Force span splitting by applying and removing a dummy style\n          const dummyStyle = new CKEDITOR.style({ element: 'span', styles: { 'background-color': '#ffffff' } });\n          editor.applyStyle(dummyStyle);\n          editor.removeStyle(dummyStyle);\n\n          const bookmarks = selection.createBookmarks();\n          ranges.forEach((range, i) => {\n            console.log(`🟢 Range ${i + 1}:`, range);\n\n            let found = 0;\n            let unwrapped = 0;\n\n            const tryProcessSpan = (span) => {\n              if (\n                span &&\n                span.type === CKEDITOR.NODE_ELEMENT &&\n                span.getName() === 'span' &&\n                span.getStyle('color')\n              ) {\n                found++;\n                console.log('🎯 Found span with color:', span.getOuterHtml());\n                span.removeStyle('color');\n\n                if (!span.hasAttributes()) {\n                  const children = span.getChildren().toArray();\n                  for (let child of children) {\n                    span.insertBeforeMe(child.remove());\n                  }\n                  span.remove();\n                  unwrapped++;\n                  console.log('🧹 Unwrapped span.');\n                }\n              }\n            };\n\n            // 1. Try enclosed node\n            const enclosed = range.getEnclosedNode();\n            tryProcessSpan(enclosed);\n\n            // 2. Fallback: walker inside the range\n            const walker = new CKEDITOR.dom.walker(range);\n            walker.evaluator = function (node) {\n              return node.type === CKEDITOR.NODE_ELEMENT &&\n                    node.getName() === 'span' &&\n                    node.getStyle('color');\n            };\n\n            let node;\n            while ((node = walker.next())) {\n              tryProcessSpan(node);\n            }\n\n            // 3. NEW: Also check if startContainer or endContainer is a colored span\n            tryProcessSpan(range.startContainer);\n            tryProcessSpan(range.endContainer);\n\n            console.log(`✅ Range ${i + 1} done: found ${found}, unwrapped ${unwrapped}`);\n          });\n\n          editor.fire('unlockSnapshot');\n\n          console.log('🎉 Finished removing color from selection.');\n        } */\n        if (value === 'default') {\n          const selection = editor.getSelection();\n          if (!selection) {\n            console.warn('⚠️ No selection found.');\n            return;\n          }\n\n          const bookmarks = selection.createBookmarks();\n          const ranges = selection.getRanges();\n\n          if (!ranges.length || ranges.every(r => r.collapsed)) {\n            console.warn('⚠️ No text selected.');\n            return;\n          }\n\n          editor.fire('lockSnapshot');\n          console.log('🟡 Starting precise color removal…');\n\n          ranges.forEach((range, index) => {\n            if (range.collapsed) {\n              console.log(`⏭ Skipping collapsed range ${index + 1}`);\n              return;\n            }\n\n            console.log(`🟢 Processing range ${index + 1}`);\n            range.enlarge(CKEDITOR.ENLARGE_INLINE);\n\n            const walker = new CKEDITOR.dom.walker(range);\n            walker.evaluator = function (node) {\n              return (\n                node.type === CKEDITOR.NODE_ELEMENT &&\n                node.getName() === 'span' &&\n                node.getStyle('color')\n              );\n            };\n\n            let node;\n            let spanCount = 0, cleanedCount = 0, unwrappedCount = 0;\n            let foundAny = false;\n\n            while ((node = walker.next())) {\n              if (!node || !node.getStyle('color')) continue;\n              foundAny = true;\n              spanCount++;\n\n              const nodeRange = editor.createRange();\n              nodeRange.selectNodeContents(node);\n\n              const startSpan = range.startContainer.getAscendant('span', true);\n              const endSpan = range.endContainer.getAscendant('span', true);\n\n              const needsSplit =\n                startSpan &&\n                endSpan &&\n                startSpan.equals(node) &&\n                endSpan.equals(node) &&\n                !range.equals(nodeRange);\n\n              if (needsSplit) {\n                console.log('✂️ Splitting span partially covered by selection.');\n\n                const startRange = editor.createRange();\n                startRange.setStart(range.startContainer, range.startOffset);\n                startRange.setEndAfter(node);\n\n                if (typeof startRange.split === 'function') {\n                  startRange.split();\n                } else {\n                  console.warn('startRange.split is not a function');\n                }\n\n                const endRange = editor.createRange();\n                endRange.setStart(range.endContainer, range.endOffset);\n                endRange.setEndAfter(node);\n\n                if (typeof endRange.split === 'function') {\n                  endRange.split();\n                } else {\n                  console.warn('endRange.split is not a function');\n                }\n\n                let current = node.getNext();\n                while (current) {\n                  if (\n                    current.type === CKEDITOR.NODE_ELEMENT &&\n                    current.getName() === 'span' &&\n                    current.getStyle('color') &&\n                    current.getPrevious() &&\n                    current.getPrevious().equals(node)\n                  ) {\n                    current.removeStyle('color');\n\n                    if (!current.hasAttributes()) {\n                      const children = current.getChildren().toArray();\n                      for (let child of children) {\n                        current.insertBeforeMe(child.remove());\n                      }\n                      current.remove();\n                      unwrappedCount++;\n                      console.log('🧹 Unwrapped empty span after color removal.');\n                    } else {\n                      console.log('🎯 Removed color, kept other styles:', current.getAttribute('style'));\n                    }\n                    cleanedCount++;\n                    break;\n                  }\n                  current = current.getNext();\n                }\n              } else {\n                node.removeStyle('color');\n                cleanedCount++;\n\n                if (!node.hasAttributes()) {\n                  const children = node.getChildren().toArray();\n                  for (let child of children) {\n                    node.insertBeforeMe(child.remove());\n                  }\n                  node.remove();\n                  unwrappedCount++;\n                  console.log('🧹 Unwrapped empty span after color removal.');\n                } else {\n                  console.log('🎯 Removed color, kept other styles:', node.getAttribute('style'));\n                }\n              }\n            }\n\n            // 🔁 Fallback: try to remove color from nearest span if none found by walker\n            if (!foundAny) {\n              const colorSpan = range.startContainer.getAscendant('span', true);\n\n              if (\n                colorSpan &&\n                colorSpan.type === CKEDITOR.NODE_ELEMENT &&\n                colorSpan.getStyle('color')\n              ) {\n                console.log('⚠️ No color spans found in walker, but start is inside a color span — fallback applying split.');\n\n                // Helper to normalize start/end container into text nodes\n                function getTextNodeAndOffset(container, offset) {\n                  if (container.type === CKEDITOR.NODE_TEXT) {\n                    return { node: container, offset };\n                  }\n\n                  const walker = new CKEDITOR.dom.walker(container);\n                  walker.evaluator = node => node.type === CKEDITOR.NODE_TEXT;\n\n                  let currentOffset = 0;\n                  let node;\n                  while ((node = walker.next())) {\n                    if (offset <= currentOffset + node.getLength()) {\n                      return {\n                        node,\n                        offset: offset - currentOffset\n                      };\n                    }\n                    currentOffset += node.getLength();\n                  }\n                  return { node: null, offset: 0 };\n                }\n\n                const { node: startNode, offset: startOffset } = getTextNodeAndOffset(range.startContainer, range.startOffset);\n                const { node: endNode, offset: endOffset } = getTextNodeAndOffset(range.endContainer, range.endOffset);\n\n                const isValidStart = startNode && startNode.getParent()?.equals(colorSpan);\n                const isValidEnd = endNode && endNode.getParent()?.equals(colorSpan);\n\n                if (isValidStart && isValidEnd && startNode.equals(endNode)) {\n                  const originalText = startNode.getText();\n                  const before = originalText.slice(0, startOffset);\n                  const middle = originalText.slice(startOffset, endOffset);\n                  const after = originalText.slice(endOffset);\n\n                  const parent = startNode.getParent();\n\n                  // Remove the original text node\n                  startNode.remove();\n\n                  // Insert before text (preserve formatting)\n                  if (before) {\n                    const beforeSpan = colorSpan.clone(false);\n                    beforeSpan.setText(before);\n                    parent.append(beforeSpan);\n                  }\n\n                  // Insert middle text (remove color, keep other styles)\n                  const middleSpan = colorSpan.clone(false);\n                  middleSpan.removeStyle('color');\n                  middleSpan.setText(middle);\n                  parent.append(middleSpan);\n\n                  // Insert after text (preserve formatting)\n                  if (after) {\n                    const afterSpan = colorSpan.clone(false);\n                    afterSpan.setText(after);\n                    parent.append(afterSpan);\n                  }\n\n                  cleanedCount++;\n                  console.log('🎯 Removed color from selected part, preserved other styles.');\n                } else {\n                  console.warn('⚠️ Could not split fallback text correctly — selection may span multiple nodes or is invalid.');\n                }\n              }\n            }\n\n            console.log(`✅ Finished range ${index + 1}: found=${spanCount}, cleaned=${cleanedCount}, unwrapped=${unwrappedCount}`);\n          });\n\n          selection.selectBookmarks(bookmarks);\n          editor.fire('unlockSnapshot');\n          console.log('🎉 Color removal complete.');\n          return;\n        }\n        else {\n          const style = new CKEDITOR.style({\n            element: 'span',\n            styles: { color: value }\n          });\n          editor.focus();\n          editor.applyStyle(style);\n        }\n      }\n    });\n  }\n});\n"],"sourceRoot":""}